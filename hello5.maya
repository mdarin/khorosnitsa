# 
# процедуры и функции, рукурсия
# 

# набор выражений в строку тоже допустим
# 1 + 1; a = 2 + 1; a; 4

func myfunc(a, b, c) {
    d = a + b + c
   d 
}
#d

#myfunc(1,2,3)


func zero() {
    1 + 1
}
#zero()





# фрактальная структура
#func fractal0() {
#    func fractal1() {
#        func fractal2() {
#            222
#        }
#        111 
#        fractal2()
#    }
#    1000
#    fractal1()
#}
#fractal0()






###
# Факторил на хвостовой рекурсии
#
# Контрольные примеры факториалов 
#
# Число	Факториал числа (n!)
# 0	    1
# 1	    1
# 2	    2
# 3	    6
# 4	    24
# 5	    120
# 6	    720
# 7	    5040
# 8	    40320
# 9	    362880
# 10    3628800
# Факториал 20: 2432902008176640000
# Факториал 30: 265252859812191058636308480000000
# Факториал 100: 933262154439441526816992388562667004907159682643816214685929
# 638952175999932299156089414639761565182862536979208272237582
# 51185210916864000000000000000000000000

func factorial_1(n, p) {
  if (n < 2) {
      p
  } else {
      p = p * n
      n = n - 1
      factorial_1(n, p)
  }
}

func factorial(n) {
  n = n
  p = 1
  factorial_1(n, p)
}

#factorial(7)
#factorial(8)





#####
## Формула Стирлинга
##

func stirl(n) {
    sqrt(2 * n * PI) * (n/E)^n * (1 + 1/(12*n))
}
#stirl(7)
#stirl(8)








#f1 = factorial(7)
#if (f1 < 5050) {
#    f2 = factorial(8)
#    if (f2 < 44000) {
#        f3 = factorial(9)
#        f3
#    }
#    f2
#} 
#f1
#f2 # undefined
#f3 # undefined

